# usage: connexio console app1 api-server
function connexio() {
  # $1 = action       # console/logs
  # $2 = app server   # app1
  # $3 = app name     # api-server
  # $4 = environment  # qa

  case "$1" in
    "console") COMMAND="bin/rails $1 $4";;
    "logs")    COMMAND="tail -f log/$4.log";;
    # "ssh")
  esac

  #TODO: add support for connecting to production
  ssh -t deploy@cx-qa "ssh -t $2 'cd /var/apps/$3/current; $COMMAND'"
}

if [[ `uname` == 'Linux' ]]; then
  # DEVBOX FUNCTIONS
  function start_app {
    if [[ "$1" == '' ]]
    then
      echo "Please provide an app name"
      list_apps
      return
    fi

    app_dir=/var/apps/$1_app
    x=`pwd`

    if [[ -x $app_dir/script/start.sh ]]
    then
      echo "Starting $1..."
      cd $app_dir
      script/start.sh
      echo "Started."
    elif [[ -d $app_dir ]]
    then
      echo "Starting $1..."
      cd $app_dir
      bundle exec unicorn -c config/unicorn.rb -E development -D
      echo "Started."
    else
      echo "No such app"
      list_apps
    fi

    cd $x
  }

  function stop_app {
    if [[ "$1" == '' ]]
    then
      echo "Please provide an app name"
      list_apps
      return
    fi

    app_dir=/var/apps/$1_app
    x=`pwd`

    if [[ -x $app_dir/script/stop.sh ]]
    then
      echo "Stopping $1..."
      cd $app_dir
      script/stop.sh
      echo "Stopped."
    elif [[ -d $app_dir ]]
    then
      echo "Stopping $1..."
      cd $app_dir
      kill `cat $app_dir/tmp/pids/unicorn.pid` &> /dev/null
      echo "Stopped."
    else
      echo "No such app"
      list_apps
    fi

    cd $x
  }

  function restart_app {
    stop_app $1
    start_app $1
  }

  function list_apps {
    echo "Listing apps..."
    echo
    for d in `ls /var/apps`
    do
      echo ${d/_app/}
    done
  }
else # should be 'Darwin' for OS X
  function run_command_on_devbox() {
    ssh -p 2222 -i ~/.vagrant.d/insecure_private_key vagrant@localhost "source ~/.zshrc; $1"
  }

  function start_app() {
    run_command_on_devbox "start_app $1"
  }

  function stop_app() {
    run_command_on_devbox "stop_app $1"
  }

  function restart_app() {
    run_command_on_devbox "restart_app $1"
  }

  function bundle_app() {
    run_command_on_devbox "cd /var/apps/$1_app; bundle; restart_app $1"
  }

  function compile_gem() {
    git push
    version=$(gem build $(ls *.gemspec) | grep File | awk '{print $2}')
    fury push $version
  }
fi
